services:
  app: &api
    restart: on-failure
    build:
      context: .
    volumes:
      - ./backend:/app
      - dev-app-data:/vol/web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env.sample
    ports:
      - 8000:8000
    depends_on:
      database:
        condition: service_healthy

  database:
    restart: on-failure
    image: postgres:16-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=fb-va-dev-db
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpassword123
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "fb-va-dev-db"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery: &celery
    <<: *api
    container_name: celery
    command: celery -A backend worker -l warning
    ports: []

  celery_beat:
    <<: *celery
    container_name: celery_beat
    command: celery -A backend beat -l warning --max-interval 600
    depends_on:
      - celery
    
  celery_worker_2:
    <<: *celery
    container_name: celery_worker_2
    command: celery -A backend worker -l warning
    ports: []


  rabbitmq:
    restart: on-failure
    image: "rabbitmq:management"
    environment:
      - RABBITMQ_DEFAULT_USER=developer
      - RABBITMQ_DEFAULT_PASS=developer
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI

volumes:
  dev-db-data:
  dev-app-data:
  dev-redis-data:

